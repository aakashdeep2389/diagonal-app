{"version":3,"sources":["services/apiService.js","_action/getContentListing.js","components/contentListing/ContentListing.js","components/layouts/Header.js","App.js","reportWebVitals.js","_reducer/listingReducer.jsx","_reducer/index.jsx","_store/Store.js","index.js"],"names":["usersService","getContentListing","CONTENTLISTINGPAGE1","page","list","ContentListing","dispatch","useDispatch","contentlisting","useSelector","state","listingReducer","useState","content","listing","setlisting","useEffect","getImageGrid","promise","resolve","reject","type","payload","console","log","className","dataLength","next","setTimeout","hasMore","loader","map","item","i","src","name","Header","search","setSearch","autocomplete","placeholder","value","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","title","action","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6oDAMaA,EAAe,CACxBC,kBAGJ,WACI,OAAOC,EAAoBC,O,qBCPlBC,EACU,oB,yBC6FRC,EA5FQ,WACnB,IAAIC,EAAWC,cACTC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,kBAClD,EAA8BC,mBAASJ,EAAe,iBAAiBK,SAAvE,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACNC,MACD,IAEHD,qBAAU,WACND,EAAWP,EAAe,iBAAiBK,WAC5C,CAACL,IAEJ,IAAMS,EAAe,WACjBX,GDVG,SAAUA,GACb,OAAO,IAAIY,KAAQ,SAAUC,EAASC,GAClCd,EAAS,CACLe,KAAMjB,EACNkB,QAAStB,EAAaC,6BCSlCsB,QAAQC,IAAIhB,EAAgB,gCAyC5B,OACI,sBAAMiB,UAAU,iBAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,IAAD,CACIC,WAAY,EACZC,KA3CM,WAGlBC,YAAW,cAER,OAuCSC,SAAS,EACTC,OAAQ,4CAJZ,SAOQhB,EAAQiB,KAAI,SAACC,EAAMC,GAEf,OAAO,mCACH,sBAAKR,UAAU,UAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKS,IAAKF,EAAK,oBAEnB,qBAAKP,UAAU,UAAf,SACKO,EAAKG,sBCxD/BC,EAxBA,WACX,MAA4BxB,mBAAS,IAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAKA,OACI,wBAAQb,UAAU,mBAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,uBAAMA,UAAU,sBAAsBc,aAAa,MAAnD,UACI,qBAAKL,IAAI,wBAAwBT,UAAU,kBAC3C,sBAAKA,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBACb,uBAAOJ,KAAK,OAAOI,UAAU,eAAee,YAAY,iBAAiBC,MAAOJ,EAAQF,KAAK,SAASO,SAXtG,SAACC,GACrBL,EAAUK,EAAEC,OAAOH,aAYH,qBAAKP,IAAI,0BAA0BT,UAAU,gCCFtDoB,MAbf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCGKqB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+BCLRQ,EAAe,CACnB,gBAAiB,CAAE1C,QAAS,IAC5B,qBAAsB,IACtB,sBAAuB,IACvB,qBAAsB,IACtB2C,MAAO,GACP,sBAAuB,IAgBV7C,EAbQ,WAAmC,IAAlCD,EAAiC,uDAAzB6C,EAAcE,EAAW,uCACvD,OAAQA,EAAOpC,MACb,KAAKjB,EACH,OAAO,2BACFM,GACA+C,EAAOnC,SAGd,QACE,OAAOZ,ICbEgD,EAJKC,YAAgB,CAClChD,mBCEIiD,EAAmBC,yBAEZC,EAAQC,YACjBL,EACAM,YACIC,IACAL,ICHRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.d147dc3e.chunk.js","sourcesContent":["/**\r\n * @about this file contains api\r\n */\r\n\r\nimport CONTENTLISTINGPAGE1 from \"../api/CONTENTLISTINGPAGE-PAGE1.json\"\r\n\r\nexport const usersService = {\r\n    getContentListing\r\n};\r\n\r\nfunction getContentListing() {\r\n    return CONTENTLISTINGPAGE1.page;\r\n}\r\n","import { usersService } from \"../services/apiService\";\r\nimport { ResponseFilter } from '../_helper/ResponseHandler';\r\nimport promise from 'bluebird';\r\n\r\nexport const list = {\r\n    SAVE_CONTENT_LIST: 'SAVE_CONTENT_LIST',\r\n}\r\n\r\n//create asker post\r\nexport function getContentListing() {\r\n    return function (dispatch) {\r\n        return new promise(function (resolve, reject) {\r\n            dispatch({\r\n                type: list.SAVE_CONTENT_LIST,\r\n                payload: usersService.getContentListing(),\r\n            });\r\n\r\n            // .then(response => {\r\n            //     let { serverResponseData } = ResponseFilter(response);\r\n            //     resolve(serverResponseData);\r\n            //     dispatch(success(serverResponseData));\r\n            // })\r\n            // .catch((err) => {\r\n            //     reject(err);\r\n            //     dispatch(failure(err));\r\n            // })\r\n        })\r\n    };\r\n    // function request(payload) {\r\n    //     return { type: list.CONTENT_LISTING_REQUEST, payload }\r\n    // }\r\n\r\n    // function success(payload) {\r\n    //     return { type: list.CONTENT_LISTING_SUCCESS, payload }\r\n    // }\r\n\r\n    // function failure(payload) {\r\n    //     return { type: list.CONTENT_LISTING_ERROR, payload }\r\n    // }\r\n}\r\n\r\n// export const listinAction = () => (dispatch) => {\r\n//     dispatch({\r\n//         type: list.CONTENT_LISTING,\r\n//         payload: ''\r\n//     })\r\n// }\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getContentListing } from '../../_action/getContentListing'\r\nimport LazyLoad from 'react-lazyload';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst ContentListing = () => {\r\n    let dispatch = useDispatch();\r\n    const contentlisting = useSelector(state => state.listingReducer);\r\n    const [listing, setlisting] = useState(contentlisting['content-items'].content)\r\n\r\n    useEffect(() => {\r\n        getImageGrid()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setlisting(contentlisting['content-items'].content)\r\n    }, [contentlisting])\r\n\r\n    const getImageGrid = () => {\r\n        dispatch(getContentListing())\r\n    }\r\n\r\n    console.log(contentlisting, 'contentlistingcontentlisting');\r\n\r\n\r\n    const fetchMoreData = () => {\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n        }, 1500);\r\n    };\r\n\r\n    // ==================================== \r\n    // const imgReducer = (state, action) => {\r\n    //     switch (action.type) {\r\n    //       case 'STACK_IMAGES':\r\n    //         return { ...state, images: state.images.concat(action.images) }\r\n    //       case 'FETCHING_IMAGES':\r\n    //         return { ...state, fetching: action.fetching }\r\n    //       default:\r\n    //         return state;\r\n    //     }\r\n    //   }\r\n\r\n    //   const pageReducer = (state, action) => {\r\n    //     switch (action.type) {\r\n    //       case 'ADVANCE_PAGE':\r\n    //         return { ...state, page: state.page + 1 }\r\n    //       default:\r\n    //         return state;\r\n    //     }\r\n    //   }\r\n\r\n    //   const [pager, pagerDispatch] = useReducer(pageReducer, { page: 0 })\r\n    //   const [imgData, imgDispatch] = useReducer(imgReducer, { images: [], fetching: true, })\r\n\r\n    //   let bottomBoundaryRef = useRef(null);\r\n    //   useFetch(pager, imgDispatch);\r\n    //   useLazyLoading('.card-img-top', imgData.images)\r\n    //   useInfiniteScroll(bottomBoundaryRef, pagerDispatch);\r\n\r\n\r\n    return (\r\n        <main className=\"body-container\">\r\n            <div className=\"listing-wrapper\">\r\n                <InfiniteScroll\r\n                    dataLength={6}\r\n                    next={fetchMoreData}\r\n                    hasMore={true}\r\n                    loader={<h4>Loading...</h4>}\r\n                >\r\n                    {\r\n                        listing.map((item, i) => {\r\n\r\n                            return <>\r\n                                <div className=\"cm_card\">\r\n                                    <div className=\"imgwrapper\">\r\n                                        <img src={item[\"poster-image\"]} />\r\n                                    </div>\r\n                                    <div className=\"content\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </>\r\n\r\n                        })\r\n                    }\r\n                </InfiniteScroll>\r\n\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContentListing\r\n","import React, { useState } from 'react'\r\n\r\nconst Header = () => {\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const handlerOnChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n    return (\r\n        <header className=\"header-container\">\r\n            <div className=\"container\">\r\n                <div className=\"header-search-wrapper\">\r\n                    <form className=\"header-search-inner\" autocomplete=\"off\" >\r\n                        <img src=\"./assets/img/Back.png\" className=\"backbtn c-pnt\" />\r\n                        <div className=\"search_bar inline\">\r\n                            <i className=\"fa fa-search\" />\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Search by name\" value={search} name=\"search\" onChange={handlerOnChange} />\r\n                        </div>\r\n                        <img src=\"./assets/img/search.png\" className=\"search_icon c-pnt\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import ContentListing from \"./components/contentListing/ContentListing\";\nimport Header from \"./components/layouts/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <ContentListing />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { list } from \"../_action/getContentListing\";\r\n\r\nconst initialState = {\r\n  \"content-items\": { content: [] },\r\n  \"page-num-requested\": \"0\",\r\n  \"page-size-requested\": \"0\",\r\n  \"page-size-returned\": \"0\",\r\n  title: \"\",\r\n  \"total-content-items\": \"\",\r\n};\r\n\r\nconst listingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case list.SAVE_CONTENT_LIST:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listingReducer from \"../_reducer/listingReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  listingReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducer/index';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './_store/Store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}